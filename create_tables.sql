DROP TABLE IF EXISTS seminar;
CREATE TABLE seminar (
    id INT NOT NULL AUTO_INCREMENT,
    company_id INT NOT NULL,
    lunch_id INT NOT NULL,
    title VARCHAR(50) NOT NULL,
    date DATETIME NOT NULL ,
    seats INT NOT NULL,
    created_at      DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at      DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),

    FOREIGN KEY (company_id)
        REFERENCES company(id),

    FOREIGN KEY (lunch_id)
        REFERENCES lunch(id)
);

DROP TABLE IF EXISTS company;
CREATE TABLE company (
    id INT NOT NULL AUTO_INCREMENT,
    name VARCHAR(50) NOT NULL,
    login_id VARCHAR(20) UNIQUE NOT NULL,
    password VARCHAR(20) NOT NULL,
    created_at      DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at      DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id) 
);

DROP TABLE IF EXISTS lunch;
CREATE TABLE lunch (
    id INT NOT NULL AUTO_INCREMENT,
    name VARCHAR(30) NOT NULL,
    description TEXT NOT NULL,
    created_at      DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at      DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id)
);

DROP TABLE IF EXISTS reserve;
CREATE TABLE reserve (
    id INT NOT NULL AUTO_INCREMENT,
    seminar_id INT NOT NULL,
    participant_id INT NOT NULL,
    created_at      DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at      DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),

    FOREIGN KEY (seminar_id)
        REFERENCES seminar(id),
    FOREIGN KEY (participant_id)
        REFERENCES participant(id)
);

DROP TABLE IF EXISTS participant;
CREATE TABLE participant (
    id INT NOT NULL AUTO_INCREMENT,
    mail VARCHAR(254) UNIQUE NOT NULL,
    password VARCHAR(256) NOT NULL,
    created_at      DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at      DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id)
);
